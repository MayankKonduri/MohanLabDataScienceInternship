import pandas as pd
import matplotlib.pyplot as plt
from sklearn.metrics import roc_curve, auc

# Define input paths
lasso_coefficients_file = '/Users/mayank/Downloads/SemesterMohanLab/TrialLassoResults/Trial_Lasso_Coefficients_Top_N.xlsx'
roc_data_file = '/Users/mayank/Downloads/SemesterMohanLab/Processed_LassoTestData_test_1_2_output_plottable'
HC = 'Active Renal'  # Define your group for HC
PG = 'Inactive SLE'  # Define your group for PG

# Function to extract top-N biomarkers from the Lasso coefficient Excel file
def get_top_n_biomarkers(lasso_coefficients_file, top_n):
    try:
        # Read the Lasso coefficients Excel file
        df = pd.read_excel(lasso_coefficients_file, sheet_name=f'Top_{top_n}_Features')
        
        # Filter out biomarkers with non-zero coefficients
        df_non_zero = df[df.iloc[:, 1] != 0]  # Assumes coefficients are in the second column
        
        # Get top-N biomarkers
        top_n_biomarkers = df_non_zero.iloc[:, 0].tolist()
        
        return top_n_biomarkers
    except FileNotFoundError:
        print(f"File '{lasso_coefficients_file}' not found.")
        return []
    except ValueError as ve:
        print(ve)
        return []

# Function to plot ROC curves for top-N biomarkers
def plot_top_n_roc_curves(roc_data_file, top_n_biomarkers, HC, PG):
    # Call the ROC plotting function from earlier
    test_3_roc_curve(roc_data_file, HC, PG, Protein=top_n_biomarkers, Choose_index=False, Choose_Protein=True, hide_labels=False)

# Specify top-N values
top_n_ranges = [3, 5, 10]

# Loop through the top-N ranges and plot ROC curves for each
for top_n in top_n_ranges:
    # Get the top-N biomarkers
    top_n_biomarkers = get_top_n_biomarkers(lasso_coefficients_file, top_n)
    
    if top_n_biomarkers:
        # Plot ROC curves for these biomarkers
        plot_top_n_roc_curves(roc_data_file, top_n_biomarkers, HC, PG)
    else:
        print(f"Skipping Top {top_n} biomarker ROC curve plotting due to errors.")

